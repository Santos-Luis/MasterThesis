date=Fri Jun 29 16:46:13 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string remove)))	response=  (string [[3],[0],[3],[1],[3]]|[[3],[],[3],[1],[3]])
date=Fri Jun 29 16:46:13 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string remove)))	response=  (string [[0],[1],[2],[3],[2],[1],[3]]|[[0],[1],[2],[],[2],[1],[]])
date=Fri Jun 29 16:46:17 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(context (graph NaiveKnowledgeGraph ((string [[0],[1],[2],[3],[2],[1],[3]]) (name b) (name c))))	response=
date=Fri Jun 29 16:46:18 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=apagar laranja	response=(call wallToString (call context:removeTop (call context:getNonEmpty))) => (string [[],[],[],[],[],[],[]])
date=Fri Jun 29 16:46:19 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(accept 6)	response=(call wallToString (call context:removeTop (call complement (call rightMost1 (call context:getTopColor (number 2 COLOR)))))) => (string [[],[],[],[],[2],[],[]])
date=Fri Jun 29 16:46:26 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(context (graph NaiveKnowledgeGraph ((string [[0],[1],[2],[3],[2],[1],[3]]) (name b) (name c))))	response=
date=Fri Jun 29 16:46:27 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=apagar laranja	response=(call wallToString (call context:removeTop (call context:getTopColor (number 2 COLOR)))) => (string [[0],[1],[],[3],[],[1],[3]])
date=Fri Jun 29 16:46:32 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(accept 15)	response=(call wallToString (call context:removeTop (call complement (call rightMost1 (call context:getTopColor (number 2 COLOR)))))) => (string [[],[],[],[],[2],[],[]])
date=Fri Jun 29 16:46:33 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string remove)))	response=  (string [[3],[0],[1],[0],[0]]|[[],[0],[1],[0],[0]])
date=Fri Jun 29 16:46:38 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(context (graph NaiveKnowledgeGraph ((string [[3],[0],[1],[0],[0]]) (name b) (name c))))	response=
date=Fri Jun 29 16:46:38 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=apagar laranja	response=(call wallToString (call context:removeTop (call context:getTopColor (number 3 COLOR)))) => (string [[],[0],[1],[0],[0]])
date=Fri Jun 29 16:46:39 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(accept 0)	response=(call wallToString (call context:removeTop (call context:getTopColor (number 3 COLOR)))) => (string [[],[0],[1],[0],[0]])
date=Fri Jun 29 16:46:40 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string remove)))	response=  (string [[0],[1],[1],[3],[0],[2]]|[[],[1],[1],[3],[],[2]])
date=Fri Jun 29 16:46:41 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string activeLearning)))	response=  (string [[0],[3],[3],[0],[3],[0]]|[[],[],[],[],[],[]])
date=Fri Jun 29 16:46:41 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(context (graph NaiveKnowledgeGraph ((string [[0],[3],[3],[0],[3],[0]]) (name b) (name c))))	response=
date=Fri Jun 29 16:46:41 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=adicionar em	response=(call wallToString (call context:removeTop (call leftMost1 (call context:getTopColor (number 3 COLOR))))) => (string [[0],[],[3],[0],[3],[0]])
date=Fri Jun 29 16:46:45 WEST 2018	sessionId=wzdsXQ32yYY	remote=localhost	format=lisp2json	query=(execute (call edu.stanford.nlp.sempre.cubeworld.StacksWorld.getLevel (string remove)))	response=  (string [[2],[0],[3],[3],[1]]|[[],[0],[3],[3],[1]])
