#!/bin/sh
GRAMMAR=./shrdlurn/stacks.grammar
LEARNOPTS="-Parser FloatingParser -FloatingParser.maxDepth 8 -FloatingParser.useSizeInsteadOfDepth true -Params.l1Reg lazy -Params.l1RegCoeff 0.001 -Parser.beamSize 100 -StacksWorldFeatureComputer.ngramN 2 -Params.initStepSize 0.1 -Params.adaptiveStepSize true"

SESSIONSTUFF="-Master.onlineLearnExamples false -Master.independentSessions true"

PRAG="-Master.bePragmatic true -PragmaticListener.addModelProb true -PragmaticListener.smoothAlpha 1.0 -PragmaticListener.uniformWeight 0.001 -PragmaticListener.lambda 3.0 -Learner.onlineEvaluation true -Derivation.comparePragmatically true"

OPTIONS="-JavaExecutor.convertNumberValues false  -FeatureExtractor.featureComputers cubeworld.StacksWorldFeatureComputer  -Params.initWeightsRandomly false -Grammar.inPaths $GRAMMAR -Parser.pruneErrorValues true -JoinFn.typeInference true -LanguageAnalyzer.lowerCaseTokens true"

# features are tree, heads, ngram
# DEBUG="-Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n,address=8898"

if [ "$1" == "mem" ]; then
    mkdir "_OUTPATH_mem"
    for turkid in $(<./shrdlurn/turkers.txt)
    do
	mkdir "_OUTPATH_mem/${turkid}/"
	TRAIN_IN="-Dataset.inPaths train:cubeturk/examples/${turkid}.lisp -Learner.maxTrainIters 1"
	BASICS="-Dmodules=core,cubeworld -cp libsempre/*:lib/* -ea edu.stanford.nlp.sempre.Main -execDir _OUTPATH_mem/${turkid}/ -overwriteExecDir -addToView 0"
	java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -FeatureExtractor.featureDomains mem
    done
elif [ "$1" == "half" ]; then
    mkdir "_OUTPATH_half"
    for turkid in $(<./shrdlurn/turkers.txt)
    do
	mkdir "_OUTPATH_half/${turkid}/"
	TRAIN_IN="-Dataset.inPaths train:cubeturk/examples/${turkid}.lisp -Learner.maxTrainIters 1"
	BASICS="-Dmodules=core,cubeworld -cp libsempre/*:lib/* -ea edu.stanford.nlp.sempre.Main -execDir _OUTPATH_half/${turkid}/ -overwriteExecDir -addToView 0"
	java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -FeatureExtractor.featureDomains half
	
    done
elif [ "$1" == "full" ]; then
    mkdir "_OUTPATH_"
    for turkid in $(<./shrdlurn/turkers.txt)
    do
	mkdir "_OUTPATH_/${turkid}/"
	TRAIN_IN="-Dataset.inPaths train:cubeturk/examples/${turkid}.lisp -Learner.maxTrainIters 1"
	BASICS="-Dmodules=core,cubeworld -cp libsempre/*:lib/* -ea edu.stanford.nlp.sempre.Main -execDir _OUTPATH_/${turkid}/ -overwriteExecDir -addToView 0"
	java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -FeatureExtractor.featureDomains tree
	
    done
else
    mkdir "_OUTPATH_improved"
    for turkid in $(<./shrdlurn/turkers.txt)
    do
	mkdir "_OUTPATH_/${turkid}/"
	TRAIN_IN="-Dataset.inPaths train:cubeturk/examples/${turkid}.lisp -Learner.maxTrainIters 1"
	BASICS="-Dmodules=core,cubeworld -cp libsempre/*:lib/* -ea edu.stanford.nlp.sempre.Main -execDir _OUTPATH_/${turkid}/ -overwriteExecDir -addToView 0"
	java $BASICS $OPTIONS $LEARNOPTS $SESSIONSTUFF $TRAIN_IN $PRAG -FeatureExtractor.featureDomains subtree
	
    done
fi
